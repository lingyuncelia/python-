from PIL import Image
from pathlib import Path
import os
from shutil import copyfile

def get_size(fileName):
    fileSize = os.path.getsize(fileName)
    fileSize /= 1024 # 将单位转为KB
    return fileSize

def compress(inImage, targetSize, step=5, quality=75, inplace=False):
    if not inplace: # 如果不覆盖
        outImage = '{}-out.{}'.format(inImage.split('.')[0], inImage.split('.')[1])
    else:
        outImage = inImage
    fileSize = get_size(inImage)
    while fileSize > targetSize:
        image = Image.open(inImage)
        image.save('k:/zhusc/ps/temp.jpg', quality=quality)
        fileSize = get_size('k:/zhusc/ps/temp.jpg')
        quality -= step # 调整压缩比
        if quality < 0:
            print('"%s"压缩失败！(请调整step)'%inImage)
            copyfile('k:/zhusc/ps/temp.jpg',outImage)
            os.remove('k:/zhusc/ps/temp.jpg') # 移处临时文件
            return
    if os.path.exists('k:/zhusc/ps/temp.jpg'):
        copyfile('k:/zhusc/ps/temp.jpg',outImage)
        os.remove('k:/zhusc/ps/temp.jpg') # 移处临时文件
    print('"%s"压缩成功！(大小：%.2fKB)'%(inImage, fileSize))
    return outImage

def loop_reads_files(way):
    import os
    for root,dirs,files in os.walk(way):
        for name in files:
            f=(os.path.join(root, name))
            compress(f,17.049,step=5, quality=75, inplace=True)

loop_reads_files('k:/zhusc/ps/')
